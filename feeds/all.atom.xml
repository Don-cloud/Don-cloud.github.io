<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Digital Sage</title><link href="https://Don-cloud.github.io/" rel="alternate"></link><link href="https://Don-cloud.github.io/feeds/all.atom.xml" rel="self"></link><id>https://Don-cloud.github.io/</id><updated>2024-11-10T10:00:00+01:00</updated><entry><title>Use cases</title><link href="https://Don-cloud.github.io/2024/11/10/hashing-usecases/" rel="alternate"></link><published>2024-11-10T10:00:00+01:00</published><updated>2024-11-10T10:00:00+01:00</updated><author><name>Sajal Sachdev</name></author><id>tag:don-cloud.github.io,2024-11-10:/2024/11/10/hashing-usecases/</id><summary type="html">&lt;p&gt;Role of Hashing Introduction&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Now, let’s look at where and how hashing is used across various applications. It covers a wide range of applications across industries. Here’s how hashing enhances security, efficiency, and data integrity:&lt;/p&gt;
&lt;h4 id="1-password-storage-and-authentication"&gt;1. &lt;strong&gt;Password Storage and Authentication&lt;/strong&gt;&lt;a class="headerlink" href="#1-password-storage-and-authentication" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: When users create passwords, the system stores a hash of the password instead of the actual password. During login, the entered password is hashed and compared with the stored hash.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Even if the database is compromised, attackers can’t easily retrieve the original passwords, as they only have access to hashed values.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-data-integrity-verification"&gt;2. &lt;strong&gt;Data Integrity Verification&lt;/strong&gt;&lt;a class="headerlink" href="#2-data-integrity-verification" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Hashing verifies data integrity by comparing the original and current hash values. If the hashes match, the data remains unchanged.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Essential in file transfers and storage to ensure that files aren’t corrupted or tampered with during transit or storage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-digital-signatures-and-certificates"&gt;3. &lt;strong&gt;Digital Signatures and Certificates&lt;/strong&gt;&lt;a class="headerlink" href="#3-digital-signatures-and-certificates" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: In digital signatures, the sender hashes a document and encrypts it with a private key. The recipient decrypts it with the sender’s public key and compares the hashes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Guarantees the authenticity and integrity of digital documents, allowing secure communication between parties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="4-blockchain-and-cryptocurrency"&gt;4. &lt;strong&gt;Blockchain and Cryptocurrency&lt;/strong&gt;&lt;a class="headerlink" href="#4-blockchain-and-cryptocurrency" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: In blockchain, each block contains a hash of the previous block, creating a secure chain. Altering any block invalidates the chain, protecting data integrity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Ensures the authenticity of transactions and secures decentralized networks like Bitcoin and Ethereum.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="5-efficient-data-lookup-hash-tables"&gt;5. &lt;strong&gt;Efficient Data Lookup (Hash Tables)&lt;/strong&gt;&lt;a class="headerlink" href="#5-efficient-data-lookup-hash-tables" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Hash tables use hashing to store and quickly retrieve data, mapping keys to specific memory addresses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Enables fast data retrieval in programming, with average constant-time complexity for operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="6-content-deduplication"&gt;6. &lt;strong&gt;Content Deduplication&lt;/strong&gt;&lt;a class="headerlink" href="#6-content-deduplication" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: File deduplication systems use hashing to detect and remove duplicate files, identifying identical content by matching hashes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Saves storage space by ensuring only unique files are stored, improving storage efficiency in backup and archival systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="7-document-and-file-fingerprinting"&gt;7. &lt;strong&gt;Document and File Fingerprinting&lt;/strong&gt;&lt;a class="headerlink" href="#7-document-and-file-fingerprinting" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Hashing creates unique identifiers, or fingerprints, for documents and files, which are then used for verification.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Allows quick identification of documents, helping to ensure authenticity and detect tampering in legal and forensic applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="8-software-integrity-verification"&gt;8. &lt;strong&gt;Software Integrity Verification&lt;/strong&gt;&lt;a class="headerlink" href="#8-software-integrity-verification" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;: Software packages often include hash values for users to verify the integrity of downloads.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Prevents users from downloading corrupted or tampered software, ensuring safe software distribution.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Cloud Technologies"></category><category term="encryption"></category><category term="cybersecurity"></category></entry><entry><title>Types of Hashing Algorithms</title><link href="https://Don-cloud.github.io/2024/11/06/hashing-types/" rel="alternate"></link><published>2024-11-06T18:40:00+01:00</published><updated>2024-11-06T18:40:00+01:00</updated><author><name>Sajal Sachdev</name></author><id>tag:don-cloud.github.io,2024-11-06:/2024/11/06/hashing-types/</id><summary type="html">&lt;p&gt;Role of Hashing Introduction&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Hashing algorithms vary in complexity, security, and length of output. Here are some of the most widely used types:&lt;/p&gt;
&lt;h6 id="md5-message-digest-algorithm-5"&gt;MD5 (Message Digest Algorithm 5)&lt;a class="headerlink" href="#md5-message-digest-algorithm-5" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Produces a 128-bit hash.&lt;/li&gt;
&lt;li&gt;It’s fast but vulnerable to collisions, meaning two different inputs can produce the same hash. Due to these vulnerabilities, MD5 is generally not recommended for secure applications today.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id="sha-1-secure-hash-algorithm-1"&gt;SHA-1 (Secure Hash Algorithm 1)&lt;a class="headerlink" href="#sha-1-secure-hash-algorithm-1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Produces a 160-bit hash.&lt;/li&gt;
&lt;li&gt;SHA-1 was widely used in the past but is now considered insecure for most applications due to susceptibility to collision attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id="sha-2-secure-hash-algorithm-2"&gt;SHA-2 (Secure Hash Algorithm 2)&lt;a class="headerlink" href="#sha-2-secure-hash-algorithm-2" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;A family of hash functions that includes SHA-256 (producing a 256-bit hash) and SHA-512 (producing a 512-bit hash).&lt;/li&gt;
&lt;li&gt;SHA-256 is a highly secure and widely used hashing algorithm, particularly in cryptocurrency and digital certificates.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id="sha-3-secure-hash-algorithm-3"&gt;SHA-3 (Secure Hash Algorithm 3)&lt;a class="headerlink" href="#sha-3-secure-hash-algorithm-3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;A newer standard designed to offer security even against advanced attacks. It’s computationally intensive but highly secure, often used in cryptographic applications that require maximum security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these algorithms are designed with specific trade-offs in mind between security, performance, and output size.&lt;/p&gt;</content><category term="Cloud Technologies"></category><category term="encryption"></category><category term="cybersecurity"></category></entry><entry><title>Power of Hashing in modern secure communications</title><link href="https://Don-cloud.github.io/2024/11/03/hashing-intro/" rel="alternate"></link><published>2024-11-03T10:42:00+01:00</published><updated>2024-11-03T10:42:00+01:00</updated><author><name>Sajal Sachdev</name></author><id>tag:don-cloud.github.io,2024-11-03:/2024/11/03/hashing-intro/</id><summary type="html">&lt;p&gt;Role of Hashing Introduction&lt;/p&gt;</summary><content type="html">
&lt;p&gt;In today’s world, hashing plays a fundamental role in securing our digital interactions. From protecting passwords to verifying data integrity, hashing is at the core of modern encrypted communications. In this article series, we’ll dive into the essentials of hashing, explore its types, and look at its many real-world applications.&lt;/p&gt;
&lt;h2 id="what-is-hashing"&gt;What is Hashing?&lt;a class="headerlink" href="#what-is-hashing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hashing is a process that transforms input data (often called plaintext) of any length into a fixed-length string of characters. This transformation produces a “hash,” a unique fingerprint of the original data, typically represented by a string of letters and numbers.&lt;/p&gt;
&lt;p&gt;The distinct feature of hashing is its &lt;strong&gt;irreversibility&lt;/strong&gt;. Once data is hashed, you cannot easily revert it to its original form. This is because hashing is a &lt;strong&gt;one-way function&lt;/strong&gt;. Although it’s technically possible to guess the input by brute force or through algorithmic flaws (in weaker hashing algorithms), good hashing algorithms are designed to make such efforts practically infeasible.&lt;/p&gt;
&lt;p&gt;In hashing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For a given input, hashing will &lt;strong&gt;always produce the same output&lt;/strong&gt; (deterministic).&lt;/li&gt;
&lt;li&gt;The hashing process is designed to be computationally &lt;strong&gt;efficient&lt;/strong&gt;, producing results quickly even with large inputs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hashing is therefore ideal for many security applications, particularly because of this unique combination of &lt;strong&gt;irreversibility&lt;/strong&gt;, &lt;strong&gt;speed&lt;/strong&gt;, and &lt;strong&gt;determinism&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example, to hash a password like &lt;code&gt;imaginary-password&lt;/code&gt; with the SHA-256 hashing algorithm, you can use the following command in Unix-based systems:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"imaginary-password"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;shasum&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command produces a 256-bit (32-byte) hash value, which is the “fingerprint” of your input text.&lt;/p&gt;</content><category term="Cloud Technologies"></category><category term="encryption"></category><category term="cybersecurity"></category></entry><entry><title>Tech Wisdom: Books &amp; Resources That Inspire and Elevate Our Tech Journey</title><link href="https://Don-cloud.github.io/2024/10/20/books-that-inspire/" rel="alternate"></link><published>2024-10-20T10:00:00+02:00</published><updated>2024-10-20T10:30:00+02:00</updated><author><name>Sajal Sachdev</name></author><id>tag:don-cloud.github.io,2024-10-20:/2024/10/20/books-that-inspire/</id><summary type="html"></summary><content type="html">
&lt;h2 id="reading-list"&gt;Reading List&lt;a class="headerlink" href="#reading-list" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this blog, I share a carefully curated list of books, tech tools and other resources that have significantly impacted my growth as a technology professional. Whether you’re looking to enhance your technical skills, explore cloud computing, or stay upto-date with cutting-edge tools, these recommendations offer both practical knowledge and inspiration. Ideal for anyone aiming to deepen their expertise, boost productivity, and ignite their passion for innovation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/The-Phoenix-Project-audiobook/dp/B00VATFAMI/ref=sr_1_1?crid=S1WAAD39DLOD&amp;amp;dib=eyJ2IjoiMSJ9.s5SlN5Um7zFOhM9Hvh5LNBineltMqLDa1twvIKi91R9msLRfLFfKn1orwyBhEZzXPQsyr26qr7hWGyv_ece1-lIzwpqBA3rr9uODkMCSiO82hEafuX_E3clqUHTxrDJxPB-epA2U9oHCZNIk0MeXNs9C9rTkwogyCpcajw8zIeZtjrNLMy5IYEjSX6B0UhkSlnk2CP-fIphWAB0dgPZ6ddjSc9G7Dn2umoPuLZbjLf8.e_BInhmbb0ZDFGvNtFp0kerRzLU50iym4TJUcQ0iFF4&amp;amp;dib_tag=se&amp;amp;keywords=the+phoenix+project&amp;amp;qid=1729433395&amp;amp;sprefix=the+phoenix+project%2Caps%2C101&amp;amp;sr=8-1"&gt;The Phoenix Project&lt;/a&gt;: By Gene Kim, Kevin Behr and George Spafford. A Novel about IT DevOps transformation of an organization&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Kubernetes-Action-Marko-Luksa/dp/1617293725/ref=sr_1_1?crid=37TTXPZJ5H3W8&amp;amp;dib=eyJ2IjoiMSJ9.vnECAzmPSfY22czsj8JX1z9iDRcNsV2Ct20-t4l3sBVG3UEMxe28a6kNStY8lu__gFh2X0BDonFuXQuaq_0vozj0aWjkhEhm5tm6sSgDrfdDdtiTNrOqUaDUfPALEG7kUNxfwQ3zMC9KxFxuCpQEsU2ZYtdOiTDn27xE-DIn4yWeITSIIOgtHbTO2xCt1yK3-mcU5o34Vnqz0k25xcHqVIyGKesa91PzpTNi1EvpVm4._J7nAS5odtYf8MmszotA0odZFtQR9yjsajyDN4nereo&amp;amp;dib_tag=se&amp;amp;keywords=kubernetes+in+action&amp;amp;qid=1729434223&amp;amp;sprefix=kubernetes%2Caps%2C93&amp;amp;sr=8-1"&gt;Kubernetes in Action&lt;/a&gt; by Marko Luska. a comprehensive guide to effectively developing and running applications in a Kubernetes environment&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Five-Dysfunctions-Team-Leadership-Fable/dp/0787960756/ref=sr_1_1?crid=2CR4BRM0H40K4&amp;amp;dib=eyJ2IjoiMSJ9.w-1pug-sqJjq393urfKgKC35BgDEWW2rozLknu7ArK0iaOy7GppD8vSv-BhCHJdp_PFXy1RP_RSq8SMr7gethXzLia0Bu_0F6sqx6LsShjCMOpOKrC08ZV20tj0-wZMk5Wt_sMFR5XB4GOr44cc0bx8CbRQR-3yhvrXo8oVeOz8hD8FzPC6UqFh1J2RwhfEelIMwK5Jd6knNl-jC6p0FflMCYsQd6R3aGdtLYERpHQc.3XmzVTSHzlgtE4EPutGpkiv6y0fTqojS5Vpzu_QIqcE&amp;amp;dib_tag=se&amp;amp;keywords=the+five+dysfunctions+of+a+team&amp;amp;qid=1729439562&amp;amp;s=books&amp;amp;sprefix=the+five+d%2Cstripbooks%2C94&amp;amp;sr=1-1"&gt;The Five Dysfunctions of a Team&lt;/a&gt; By Patrick M. Lencioni A leadership fable of how to build effective teams.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Let-Us-Authentic-programming-language/dp/9355512767/?_encoding=UTF8&amp;amp;pd_rd_w=rcpkq&amp;amp;content-id=amzn1.sym.eb12963a-1824-4e85-bbd8-e45801545a5c%3Aamzn1.symc.ee4c414f-039b-458d-a009-4479557ca47b&amp;amp;pf_rd_p=eb12963a-1824-4e85-bbd8-e45801545a5c&amp;amp;pf_rd_r=J3KZ9FX671TRAHRZWDEQ&amp;amp;pd_rd_wg=Ewr2Y&amp;amp;pd_rd_r=c531da9b-8585-48a8-baa2-8f1753c2f1b8&amp;amp;ref_=pd_hp_d_btf_ci_mcx_mr_hp_d"&gt;Let Us C&lt;/a&gt; By Yashavant kanetkar. An Authentic guide to C programming language&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Made-Stick-Ideas-Survive-Others/dp/1400064287/ref=sr_1_1?crid=MUUGMNCMMWKJ&amp;amp;dib=eyJ2IjoiMSJ9.gUFZ75rD3amopUP-TOZIoFoZPmYHxIqFHdpf8pr1J9xJN5nFMHkqGPqxyJkXU2m21JZNLQHLZrgsxzk9GPKtvaFgu97Vzh9Egbokwy79iHrW-5yx-wWiaLKS4ZJ6JG5O8hYZYvuB-4I7LkxhcJUU1md-lexkeY58lqqLBaiEaWEJeYFaq8O1UdWFe-v1_e8_WP0euaTBf4FCHEPFsi4uuWnJG3KS_YOSemQebevpQCo.O0pLKKVKJJvYgrzNT_ynUfSWf7RKAo5B5h7xlhVY5dY&amp;amp;dib_tag=se&amp;amp;keywords=made+to+stick&amp;amp;qid=1729438445&amp;amp;s=books&amp;amp;sprefix=made+to+st%2Cstripbooks%2C119&amp;amp;sr=1-1"&gt;Made to Stick&lt;/a&gt; by Chip Heath, Dan Heath. Why Some Ideas Survive and Others Die &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="helpful-tools"&gt;Helpful Tools&lt;a class="headerlink" href="#helpful-tools" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://azurespeedtest.azurewebsites.net/"&gt;Azure Speed Test&lt;/a&gt; Tool to provide measurable azure regions latency information from your location &lt;/li&gt;
&lt;/ul&gt;</content><category term="Inspiration"></category><category term="books"></category><category term="leadership"></category></entry><entry><title>Kubernetes Filesystem Workflows with Sidecars</title><link href="https://Don-cloud.github.io/2024/10/04/sidecar-filesystem-notifications/" rel="alternate"></link><published>2024-10-04T10:20:00+02:00</published><updated>2024-10-05T19:30:00+02:00</updated><author><name>Sajal Sachdev</name></author><id>tag:don-cloud.github.io,2024-10-04:/2024/10/04/sidecar-filesystem-notifications/</id><summary type="html">&lt;p&gt;Linux filesystem notifications&lt;/p&gt;</summary><content type="html">
&lt;h2 id="inotify-in-kubernetes-the-sidecar-pattern"&gt;Inotify in Kubernetes: The Sidecar Pattern&lt;a class="headerlink" href="#inotify-in-kubernetes-the-sidecar-pattern" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In Kubernetes, a sidecar container is a container that runs alongside your main application in the same Pod, adding extra functionalities like logging, monitoring, or proxying. Using inotify as a sidecar can bring real-time file monitoring to your Kubernetes setup.&lt;/p&gt;
&lt;h2 id="why-use-inotify-as-a-sidecar"&gt;Why Use Inotify as a Sidecar?&lt;a class="headerlink" href="#why-use-inotify-as-a-sidecar" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are several scenarios where using inotify in a Kubernetes sidecar is valuable:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log Streaming: You can use inotify to watch application logs and stream them to an external logging service like Fluentd or Elasticsearch as soon as they are updated.&lt;/li&gt;
&lt;li&gt;Dynamic Config Reloads: Inotify can watch for changes in configuration files (mounted via ConfigMaps or Secrets) and automatically trigger a config reload without restarting the application.&lt;/li&gt;
&lt;li&gt;Event-Driven Systems: Watch for new files in a shared volume and trigger data processing workflows when files are added or modified.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="example-log-monitoring-sidecar-with-inotify"&gt;Example: Log Monitoring Sidecar with Inotify&lt;a class="headerlink" href="#example-log-monitoring-sidecar-with-inotify" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Suppose you have a web application that generates logs in the &lt;code&gt;/var/log/app.log&lt;/code&gt; file. You want to stream these logs in real-time without modifying the application code. You can achieve this by deploying an inotify sidecar container that monitors the log file.&lt;/p&gt;
&lt;p&gt;Here’s a basic Kubernetes &lt;code&gt;Deployment&lt;/code&gt; YAML configuration that demonstrates this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;apiVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;apps/v1&lt;/span&gt;
&lt;span class="nt"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Deployment&lt;/span&gt;
&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;app-with-inotify&lt;/span&gt;
&lt;span class="nt"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;replicas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;matchLabels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;app-with-inotify&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;app-with-inotify&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;spec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;containers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;web-app&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;my-web-app-image&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;volumeMounts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;log-volume&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;mountPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/var/log/&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;log-watcher&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;alpine&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"inotifywait"&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-m"&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"/var/log/app.log"&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"-e"&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"modify"&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;volumeMounts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;log-volume&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;mountPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/var/log/&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;log-volume&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;emptyDir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="benefits-of-using-inotify-in-kubernetes-sidecars"&gt;Benefits of Using Inotify in Kubernetes Sidecars&lt;a class="headerlink" href="#benefits-of-using-inotify-in-kubernetes-sidecars" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Efficiency: Inotify provides event-driven notifications, making it more efficient than polling for file changes.&lt;/p&gt;
&lt;p&gt;Separation of Concerns: By offloading file monitoring to a sidecar, the main application remains focused on its primary logic, while the sidecar handles ancillary tasks like log monitoring or config watching.&lt;/p&gt;
&lt;p&gt;Real-Time Response: Inotify allows your system to react to file system events instantly, which can be crucial for real-time logging, dynamic configurations, or event-driven workflows.&lt;/p&gt;
&lt;h2 id="limitations-to-consider"&gt;Limitations to Consider&lt;a class="headerlink" href="#limitations-to-consider" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Linux kernel has a limit on the number of inotify watches that can be created (controlled by the &lt;code&gt;fs.inotify.max_user_watches&lt;/code&gt; parameter). This limit might need to be increased for systems that need to monitor many files or directories.
This article assumes that &lt;code&gt;Persistent Volume Claims&lt;/code&gt; (PVC) have already been configured in your Kubernetes cluster and that a filesystem is attached for storing the files. This approach is most suitable for handling reasonable file sizes. For larger files, you may want to explore the &lt;a href="https://learn.microsoft.com/en-us/azure/architecture/patterns/claim-check"&gt;claim-check&lt;/a&gt; pattern as an alternative approach.&lt;/p&gt;</content><category term="Cloud Technologies"></category><category term="kubernetes"></category></entry><entry><title>Boosting Kubernetes Filesystem Workflows</title><link href="https://Don-cloud.github.io/2024/10/03/kubernetes-filesystem-notifications/" rel="alternate"></link><published>2024-10-03T10:20:00+02:00</published><updated>2024-10-03T19:30:00+02:00</updated><author><name>Sajal Sachdev</name></author><id>tag:don-cloud.github.io,2024-10-03:/2024/10/03/kubernetes-filesystem-notifications/</id><summary type="html">&lt;p&gt;Linux filesystem notifications&lt;/p&gt;</summary><content type="html">
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In Linux, monitoring file events is essential for various applications like real-time logging, configuration updates, or event-driven workflows. &lt;strong&gt;Inotify&lt;/strong&gt; is a powerful tool provided by the Linux kernel to watch files and directories for changes. In this article, we’ll explore how inotify works and how it can be integrated as a &lt;strong&gt;sidecar&lt;/strong&gt; in Kubernetes to improve the architecture of cloud-native applications.&lt;/p&gt;
&lt;h2 id="what-is-inotify"&gt;What is Inotify?&lt;a class="headerlink" href="#what-is-inotify" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Inotify&lt;/strong&gt; (inode notify) is a Linux kernel feature that allows monitoring changes to files and directories. It helps you track file system events like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File creation&lt;/li&gt;
&lt;li&gt;File deletion&lt;/li&gt;
&lt;li&gt;File modification&lt;/li&gt;
&lt;li&gt;Attribute changes (permissions, ownership, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inotify generates notifications whenever specific events occur, which can be consumed by applications to act upon those events in real time. This is much more efficient than traditional polling methods, as inotify provides instant feedback when a change occurs.&lt;/p&gt;
&lt;h3 id="common-use-cases"&gt;Common Use Cases&lt;a class="headerlink" href="#common-use-cases" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log monitoring&lt;/strong&gt;: Automatically process log files as they are updated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuration updates&lt;/strong&gt;: Monitor config files and trigger actions when changes are made.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data pipeline triggers&lt;/strong&gt;: Respond to new files or modifications within a directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="inotify-workflow"&gt;Inotify Workflow&lt;a class="headerlink" href="#inotify-workflow" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here’s a typical workflow using inotify:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Add a Watch&lt;/strong&gt;: A program uses &lt;code&gt;inotify_add_watch()&lt;/code&gt; to register a file or directory to watch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Listen for Events&lt;/strong&gt;: The program listens for file system events like file modification, creation, or deletion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Respond&lt;/strong&gt;: Once an event occurs, the program can perform necessary actions like reloading a configuration or processing a new log entry.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="how-to-use-inotify-in-linux"&gt;How to Use Inotify in Linux&lt;a class="headerlink" href="#how-to-use-inotify-in-linux" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can install &lt;strong&gt;inotify-tools&lt;/strong&gt; to easily monitor file changes from the command line.&lt;/p&gt;
&lt;h3 id="installing-inotify-tools"&gt;Installing Inotify-tools&lt;a class="headerlink" href="#installing-inotify-tools" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On &lt;strong&gt;Ubuntu&lt;/strong&gt; or other Debian-based distributions, you can install it with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;inotify-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may include this in your &lt;strong&gt;DOCKERFILE&lt;/strong&gt; if you are deploying a container in kubernetes&lt;/p&gt;
&lt;h3 id="example-monitoring-a-directory-for-file-changes"&gt;Example: Monitoring a Directory for File Changes&lt;a class="headerlink" href="#example-monitoring-a-directory-for-file-changes" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here’s an example of monitoring the &lt;code&gt;/tmp&lt;/code&gt; directory for file creation, deletion, and modifications:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;inotifywait&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;/tmp&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;delete&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;modify
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-m&lt;/code&gt; flag keeps the command running to continuously monitor events, while the &lt;code&gt;-e&lt;/code&gt; flag specifies which events to watch for.&lt;/p&gt;</content><category term="Cloud Technologies"></category><category term="sidecar"></category></entry></feed>